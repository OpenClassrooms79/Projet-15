name: Continuous integration

on:
  push:
    branches:
      - '**'  # Déclenche l'action sur toutes les branches

permissions:
  contents: read

jobs:
  ci:
    name: Continuous Integration
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ ubuntu-latest ]
        php-versions: [ '8.4' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl
          tools: castor

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Build
        run: |
          docker compose -f "docker-compose.yml" up -d --build --no-deps  # --no-deps : éviter de redémarrer les dépendances
          composer install
          composer dump-autoload --optimize  # Optimisation des autoloaders
          php bin/console doctrine:database:drop -f --if-exists --env=test
          php bin/console doctrine:database:create --if-not-exists --env=test
          php bin/console doctrine:migrations:migrate -n --env=test
          php bin/console doctrine:fixtures:load -n --purge-with-truncate --env=test

      - name: Analysis
        run: php vendor/bin/phpstan

      - name: Tests avec couverture de code
        run: php bin/phpunit --coverage-clover=coverage.xml

      - name: Envoyer le fichier coverage.xml vers Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          fail_ci_if_error: true
